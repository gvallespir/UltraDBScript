<?xml version="1.0" encoding="ISO-8859-1" ?>
<DBSCRIPT desc="Migración con homologación">
<!--
Este XML recibe un conjunto de parametros y entrega una SQL_METADATA, la cual tiene la estructura
posicion: ordenamiento para group_concat
extra_join: joins adicionales para construir la query
campo_insert: campos a incluir en insert
campo_select: campos a incluir en select

El USO de este XML depende de que se tengan predefinidos parametros
VAR_BD_CATALOGO: Catalogo del information_schema a usar
VAR_BD_ORIGEN:  Base de datos de origen
VAR_BD_DESTINO:  Base de datos de destino
VAR_TABLA_ORIGEN: Tabla de origen
VAR_TABLA_DESTINO: Tabla de destino
VAR_MAPA_HOMOLOGACION: Mapa de reglas de homologación
-->

<PARAM id="SQL_METADATA" value="
SELECT 
t.posicion
,CASE WHEN t.extra_join IS NULL THEN '' ELSE t.extra_join END as extra_join
,t.campo_insert
,CASE WHEN t.extra_join IS NULL THEN t.campo_select ELSE t.campo_homologado_select END as campo_select
FROM (
SELECT 
concat(ti.table_name,'.',ti.column_name) as id_campo_origen
,concat(tf.table_name,'.',tf.column_name) as id_campo_destino
,tf.ordinal_position as posicion
,concat('th',tf.ORDINAL_POSITION) as alias_tabla_homologacion
,concat('LEFT JOIN etl_mapeo_codificacion th',tf.ordinal_position,' ON '
,'th',tf.ordinal_position,'.tipo_mapeo=',char(39),tm.codigo_interno,char(39),'  AND '
,'th',tf.ordinal_position,'.codigo_externo=t.',tf.column_name,' AND '
,'th',tf.ordinal_position,'.activo=1 '
) as extra_join
,tf.column_name as campo_insert
,concat(' t.',tf.column_name,' ') as campo_select
,concat(' ifnull( '
,'th',tf.ORDINAL_POSITION,'.codigo_interno'
,',t.',tf.column_name
,' )') as campo_homologado_select
,tm.codigo_interno as regla_campo
FROM information_schema.columns ti 
INNER JOIN information_schema.columns tf ON ti.TABLE_CATALOG = tf.TABLE_CATALOG AND ti.COLUMN_NAME = tf.COLUMN_NAME
LEFT JOIN etl_mapeo_codificacion tm ON tm.tipo_mapeo='%VAR_MAPA_HOMOLOGACION%' /*VAR_MAPA_HOMOLOGACION*/
AND tm.codigo_externo=concat(tf.table_name,'.',tf.column_name) AND tm.activo=1
WHERE 
ti.table_catalog='%VAR_BD_CATALOGO%' /*VAR_BD_CATALOGO*/
AND ti.table_schema='%VAR_BD_ORIGEN%'  /*VAR_BD_ORIGEN*/
AND tf.table_schema='%VAR_BD_DESTINO%' /*VAR_BD_DESTINO*/
AND ti.table_name='%VAR_TABLA_ORIGEN%'  /*VAR_TABLA_ORIGEN*/
AND tf.table_name='%VAR_TABLA_DESTINO%' /*VAR_TABLA_DESTINO*/
ORDER BY tf.ordinal_position
) t
ORDER BY t.posicion
"/>

</DBSCRIPT>